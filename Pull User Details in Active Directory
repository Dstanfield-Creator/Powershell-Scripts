# Script to retrieve detailed information about an Active Directory user account with a GUI
# Author: Danny Stanfield
# Date: [2025]

# Import the Active Directory module
Import-Module ActiveDirectory
Add-Type -AssemblyName System.Windows.Forms

# Function to retrieve and display user information
function Get-ADUserDetails {
    param (
        [string]$Username
    )

    try {
        # Retrieve user details using firstname.lastname format
        $user = Get-ADUser -Filter "SamAccountName -eq '$Username'" -Properties DisplayName, EmailAddress, LastLogonDate, Enabled, MemberOf

        if ($null -eq $user) {
            [System.Windows.Forms.MessageBox]::Show("User '$Username' not found in Active Directory.", "Error", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
            return
        }

        # Build user details
        $details = "User Details for '$Username':`n"
        $details += "-----------------------------------`n"
        $details += "Display Name: $($user.DisplayName)`n"
        $details += "Email Address: $($user.EmailAddress)`n"
        $details += "Account Enabled: $($user.Enabled)`n"
        $details += "Last Logon Date: $($user.LastLogonDate)`n`n"

        # Retrieve and append group memberships
        $details += "Group Memberships:`n"
        $details += "-----------------------------------`n"
        $user.MemberOf | ForEach-Object {
            $group = Get-ADGroup -Identity $_
            $details += "$($group.Name)`n"
        }

        # Display the details in a message box
        [System.Windows.Forms.MessageBox]::Show($details, "User Details", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
    }
    catch {
        [System.Windows.Forms.MessageBox]::Show("An error occurred: $_", "Error", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
    }
}

# Create the GUI
$form = New-Object System.Windows.Forms.Form
$form.Text = "Active Directory User Information"
$form.Size = New-Object System.Drawing.Size(400, 200)
$form.StartPosition = "CenterScreen"

# Username label
$label = New-Object System.Windows.Forms.Label
$label.Text = "Enter Username (firstname.lastname):"
$label.Location = New-Object System.Drawing.Point(10, 20)
$label.Size = New-Object System.Drawing.Size(200, 20)
$form.Controls.Add($label)

# Username textbox
$textBox = New-Object System.Windows.Forms.TextBox
$textBox.Location = New-Object System.Drawing.Point(220, 20)
$textBox.Size = New-Object System.Drawing.Size(150, 20)
$form.Controls.Add($textBox)

# Search button
$button = New-Object System.Windows.Forms.Button
$button.Text = "Search"
$button.Location = New-Object System.Drawing.Point(150, 60)
$button.Size = New-Object System.Drawing.Size(100, 30)
$form.Controls.Add($button)

# Button click event
$button.Add_Click({
    $Username = $textBox.Text
    if (-not [string]::IsNullOrWhiteSpace($Username)) {
        Get-ADUserDetails -Username $Username
    } else {
        [System.Windows.Forms.MessageBox]::Show("Please enter a username.", "Warning", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Warning)
    }
})

# Run the form
[void]$form.ShowDialog()
